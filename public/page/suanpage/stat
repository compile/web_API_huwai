
var acc_host = 'log.bao315.com';
var companyid = '72175858';
var hz6d_guest_ip = '117.30.233.4';
var ipstr = '福建省厦门市 电信';
var areastr = '福建省厦门市 电信';
var ipContinent = '';
var in_timestamp = '1605343225641';
var hz6d_guest_id = '10173151226015';
var hz6d_style_id = '2';
var hz6d_alias_host = 'http://log.bao315.com';
var company_site = {};
var mnone = 0;
var hz6d_device = '';

try {
    if (hz6d_device == "android") {
        var android_guest_id = Android.giveInformation(null);
        if (android_guest_id) {
            hz6d_guest_id = android_guest_id;
        } else if (hz6d_guest_id != "0") {
            Android.writeData(hz6d_guest_id.toString());
        }
    }
} catch (e) {
}

in_timestamp = parseInt(in_timestamp / 1000);
var http_pro = (document.location.protocol == 'https:') ? 'https://' : 'http://';
onliner_zdfq = 0;
//indexOf低版本ie兼容
if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function (val) {
        var value = this;
        for (var i = 0; i < value.length; i++) {
            if (value[i] == val) return i;
        }
        return -1;
    };
}
(function (window, undefined) {
    var w = window,
        d = document,
        dd = d.documentElement,
        db = d.body,// db kf.php在head中时获取不到
        head = d.head || d.getElementsByTagName("head")[0] || dd,
        isStrict = d.compatMode == "CSS1Compat",
        m = Math.max,
        ua = navigator.userAgent,
        np = navigator.platform,
        EN = w.encodeURIComponent,
        DE = w.decodeURIComponent;

    var $50 = function (id) {
        return d.getElementById(id) ? d.getElementById(id) : null
    };
    $50.version = '1.0.0';
    $50.global = {};
    $50.getKFscript = function () {
        if (typeof $50.global[''] == 'undefined' || $50.global[''] == null) {
            var scripts = document.getElementsByTagName('script'), len = scripts.length, i = 0;
            for (; i < len; i++) {
                if (/kf\.php/img.test(scripts[i].src)) {
                    $50.global[''] = scripts[i];
                    break;
                }
            }
        }
        return $50.global[''];
    };
    $50.ready = (function () {
        var ie = !!(window.attachEvent && !window.opera),
            wk = /webkit\/(\d+)/i.test(navigator.userAgent) && (RegExp.$1 < 525),
            fn = [],
            run = function () {
                isReady = true;
                for (var i = 0; i < fn.length; i++) fn[i]();
            },
            d = document,
            isReady = false;
        return function (f) {
            if (d.body) {
                f();
                return;
            }
            if (isReady) {
                f();
                return;
            }
            if (!ie && !wk && d.addEventListener) return d.addEventListener('DOMContentLoaded', f, false);
            if (fn.push(f) > 1) return;
            if (ie) {
                (function () {
                    if (!isReady) {
                        try {
                            d.documentElement.doScroll('left');
                            run();
                        }
                        catch (err) {
                            setTimeout(arguments.callee, 0);
                        }
                    }
                })();
            } else if (wk) {
                var t = setInterval(function () {
                    if (/^(loaded|complete)$/.test(d.readyState))
                        clearInterval(t), run();
                }, 0);
            }
        };
    })();
    $50.forEach = function (enumerable, iterator, context) {
        var i, n, t;
        if (typeof iterator == "function" && enumerable) {
            // Array or ArrayLike or NodeList or String or ArrayBuffer
            n = typeof enumerable.length == "number" ? enumerable.length : enumerable.byteLength;
            if (typeof n == "number") {
                if (Object.prototype.toString.call(enumerable) === "[object Function]") {
                    return enumerable;
                }
                for (i = 0; i < n; i++) {
                    t = enumerable[i];
                    t === undefined && (t = enumerable.charAt && enumerable.charAt(i));
                    iterator.call(context || null, t, i, enumerable);
                }
                // enumerable is number
            } else if (typeof enumerable == "number") {
                for (i = 0; i < enumerable; i++) {
                    iterator.call(context || null, i, i, i);
                }
                // enumerable is json
            } else if (typeof enumerable == "object") {
                for (i in enumerable) {
                    if (enumerable.hasOwnProperty(i)) {
                        iterator.call(context || null, enumerable[i], i, enumerable);
                    }
                }
            }
        }
        return enumerable;
    };
    $50.type = (function () {
        var objectType = {},
            nodeType = [, "HTMLElement", "Attribute", "Text", , , , , "Comment", "Document", , "DocumentFragment", ],
            str = "Array Boolean Date Error Function Number RegExp String",
            retryType = {
                'object': 1,
                'function': '1'
            },
            toString = objectType.toString;
        $50.forEach(str.split(" "), function (name) {
            objectType["[object " + name + "]"] = name.toLowerCase();
            $50["is" + name] = function (unknow) {
                return $50.type(unknow) == name.toLowerCase();
            }
        });
        return function (unknow) {
            var s = typeof unknow;
            return !retryType[s] ? s : unknow == null ? "null" : unknow._type_ || objectType[toString.call(unknow)] || nodeType[unknow.nodeType] || (unknow == unknow.window ? "Window" : "") || "object";
        };
    })();

    $50.isObject = function (unknow) {
        return typeof unknow === "function" || (typeof unknow === "object" && unknow != null)
    };

    $50.isPlainObject = function (unknow) {
        var key, hasOwnProperty = Object.prototype.hasOwnProperty;

        if ($50.type(unknow) != "object") {
            return false;
        }
        if (unknow.constructor && !hasOwnProperty.call(unknow, "constructor") && !hasOwnProperty.call(unknow.constructor.prototype, "isPrototypeOf")) {
            return false;
        }
        for (key in unknow) {
        }
        return key === undefined || hasOwnProperty.call(unknow, key);
    };
    $50.kfextend = function (depthClone, object) {
        var second, options, key, src, copy, i = 1,
            n = arguments.length,
            result = depthClone || {},
            copyIsArray, clone;
        $50.isBoolean(depthClone) && (i = 2) && (result = object || {});
        !$50.isObject(result) && (result = {});
        for (; i < n; i++) {
            options = arguments[i];
            if ($50.isObject(options)) {
                for (key in options) {
                    src = result[key];
                    copy = options[key];
                    if (src === copy) {
                        continue;
                    }
                    if ($50.isBoolean(depthClone) && depthClone && copy && ($50.isPlainObject(copy) || (copyIsArray = $50.isArray(copy)))) {
                        if (copyIsArray) {
                            copyIsArray = false;
                            clone = src && $50.isArray(src) ? src : [];
                        } else {
                            clone = src && $50.isPlainObject(src) ? src : {};
                        }
                        result[key] = $50.kfextend(depthClone, clone, copy);
                    } else if (copy !== undefined) {
                        result[key] = copy;
                    }
                }
            }
        }
        return result;
    }
    $50.kfextend($50, {
        $: function (id) {
            return d.getElementById(id) ? d.getElementById(id) : null;
        },
        EN: EN,
        DE: DE,
        isStrict: isStrict,
        counter: 1,     //计数器
        data: function (key, value) {
            if (typeof value == 'undefined') {
                return $50.global[key] === undefined ? null : $50.global[key];
            } else {
                $50.global[key] = value;
            }
        },
        trim: function (text) {
            //return text == null ? "": (text + "").replace(new RegExp('(^[\\s\\t\\xa0\\u3000\\uFEFF]+)|([\\u3000\\xa0\\s\\t\\uFEFF]+\x24)', 'g'), '');
            return text == null ? "" : (text + "").replace(new RegExp('(^[\s\t\xa0\u3000\uFEFF]+)|([\u3000\xa0\s\t\uFEFF]+$)', 'g'), '');
        },
        getOs: function () {
            var allOs = ['iphone', 'android', 'macos', 'linux', 'win2008', 'win8', 'win7', 'winvista', 'win98', 'win2000', 'win2003', 'winxp', 'os_other'];
            var isWin = (np == "Win32") || (np == "Windows") || (np == "Win64");
            if (isWin) {
                var winos = {
                    'win98': '(Win98)|(Windows 98)',
                    'win2000': '(Windows NT 5.0)|(Windows 2000)',
                    'winxp': '(Windows NT 5.1)|(Windows XP)',
                    'win2003': '(Windows NT 5.2)|(Windows 2003)',
                    'win7': '(Windows NT 6.1)|(Windows 7)',
                    'winvista': '(Windows NT 6.0)|(Windows Vista)',
                    'win8': '(Windows NT 6.2)|(Windows 8)',
                    'win2008': '(Windows NT 6.1)|(Windows 2008)'
                };
                for (var i in winos) {
                    if (winos.hasOwnProperty(i) && (new RegExp(winos[i], 'i')).test(ua)) return i;
                }
            }
            var isMac = (np == "Mac68K") || (np == "MacPPC") || (np == "Macintosh") || (np == "MacIntel");
            if (isMac) return "macos";
            if ((np == "X11") && !isWin && !isMac) return "unix";
            if ((np.toLowerCase() + ua.toLowerCase()).indexOf('iphone') > -1) return 'iphone';
            if (np.toLowerCase().indexOf("linux") > -1 && ua.toLowerCase().indexOf('android') > -1) return 'android';
            if (np.indexOf("Linux") > -1) return "linux";
            return "os_other";
        },
        isMobile: function () {
            var userAgentInfo = navigator.userAgent;
            var Agents = ["Android", "iPhone",
                "SymbianOS", "Windows Phone",
                "iPad", "iPod"];
            var flag = 'n';
            for (var v = 0; v < Agents.length; v++) {
                if (userAgentInfo.indexOf(Agents[v]) > 0) {
                    flag = 'y';
                    break;
                }
            }
            return flag;
        },
        getUrlHost: function (url) {
            if (typeof url == "undefined" || url == "") return "";
            var domain = url.split("/");
            if (domain[2]) domain = domain[2];
            else domain = "";
            return domain;
        },
        getUrlParam: function () {
            var url = location.search;
            var theRequest = new Object();
            if (url.indexOf("?") != -1) {
                var str = url.substr(1);
                strs = str.split("&");
                for (var i = 0; i < strs.length; i++) {
                    theRequest[strs[i].split("=")[0]] = strs[i].split("=")[1];
                }
            }
            return theRequest;
        },
        getBrowser: function () {
            var browsers = {
                'sogou': 'sogou',
                'maxthon': 'maxthon',
                'opera': 'opera',
                'qq': 'tencent',
                'uc': 'uc',
                '360': '360',
                'firefox': 'firefox',
                'chrome': 'chrome',
                'safari': 'safari',
                'ie10': 'msie 10',
                'ie9': 'msie 9',
                'ie8': 'msie 8',
                'ie7': 'msie 7',
                'ie6': 'msie 6',
                'ie5': 'msie 5'
            };
            for (var i in browsers) {
                if (browsers.hasOwnProperty(i) && (new RegExp(browsers[i], 'i')).test(ua)) return i;
            }
            return 'ua_other';
        },
        getScreen: function () {
            return screen.width + "_" + screen.height;
        },
        setCookie: function (key, value, options) {
            if (!$50.isCookieKey(key)) {
                return;
            }
            options = options || {};
            var expires = options.expires;
            if ('number' == typeof options.expires) {
                expires = new Date();
                expires.setTime(expires.getTime() + options.expires * 1000);
            }
            document.cookie = key + "=" + EN(value)
                + (options.path ? "; path=" + options.path : "")
                + (expires ? "; expires=" + expires.toUTCString() : "")
                + ("; domain=" + (options.domain ? options.domain : location.hostname))
                + (options.secure ? "; secure" : "");
        },
        getCookie: function (key) {
            if ($50.isCookieKey(key)) {
                var reg = new RegExp('(^| )' + key + '=([^;]*)(;|$)'), result = reg.exec(document.cookie);
                if (result) {
                    var value = (result[2] === undefined || result[2] === null) ? '' : result[2];
                }
            }
            if ('string' == typeof value) {
                return DE(value);
            }
            return '';
        },
        isCookieKey: function (key) {
            //	return (new RegExp('^[^\\x00-\\x20\\x7f\\(\\)<>@,;:\\\\\\"\\[\\]\\?=\\{\\}\\/\\u0080-\\uffff]+\x24')).test(key);
            return (new RegExp('^[^\\x00-\\x20\\x7f\\(\\)<>@,;:\\\\\\"\\[\\]\\?=\\{\\}\\/\\u0080-\\uffff]+$')).test(key);
        },
        setKfCookie: function (data) {       //设置主域名50kf.com下的cookie   data为二维数组  [['name1','张三',0],['name2','李四',3600]]   第三个参数为过期时间  0：回话  -1：永久  时间戳：过期时间
            var _this = this;
            var url = "//tb.50kf.com/code/ck/";
            var param = new Array();
            for (var i = 0; i < data.length; i++) {
        var ck = data[i];
                for (var j = 0; j < ck.length; j++) {
            param.push(encodeURIComponent(ck[j]));
                }
            }
            var param_str = param.join('/');
            url += param_str;
            var id = 'kf_script_' + _this.counter;
            _this.createScript(id, url);
            _this.counter++;
        },
getWH: function () { // 获取窗口可用大小
    return {
        W: (isStrict ? dd : d.body).clientWidth,
                H: (isStrict ? dd : d.body).clientHeight
            };
        },
getSWH: function () { // 获取屏幕分辨率的大小
    return {
        W: screen.width,
                H: screen.height
            };
        },
getS: function () {// 获取滚动距离
    return {
        L: m(dd.scrollLeft, d.body.scrollLeft),
                T: m(dd.scrollTop, d.body.scrollTop)
            };
        },
htmlDecode: function (text) {
    return text.replace(/&amp;/g, '&').replace(/&quot;/g, '"').replace(/&#039;/g, '"').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&douhao/g, ",").replace(/&jinghao/g, '#');
        },
creElm: function (o, t, a, loc) {
    loc = loc || 0;
    var b = d.createElement(t || 'div'), c = (a || d.body || dd);
            for (var p in o) {
        if (!o.hasOwnProperty(p)) continue;
        p == 'style' ? b[p].cssText = o[p] : b[p] = o[p];
                if (p == 'id' && $50(o[p])) $50(o[p]).parentNode.removeChild($50(o[p]));
            }
            if (!loc) return c.insertBefore(b, c.firstChild);
            else return $50.insertAfter(b, c.lastChild);
        },
insertAfter: function (newEl, targetEl) {
    var parentEl = targetEl.parentNode;
    if (parentEl.lastChild == targetEl) {
        return parentEl.appendChild(newEl);
    } else {
        return parentEl.insertBefore(newEl, targetEl.nextSibling);
    }
},
createScript: function (id, url) {
    $50.creElm({
                'id': id == '' ? 'hz6d_script_' + Math.random() : id,
                'src': url,
                'charset': 'utf-8'
            }, 'script', head);
        },
before: function (html, elem) {
    var frag = d.createDocumentFragment(), div = d.createElement('div');
            div.innerHTML = html;
            frag.appendChild(div);
            return (elem.parentNode || d.body || dd).insertBefore(div.firstChild.cloneNode(true), elem);
            frag = null;
        },
after: function (html, elem) {
    var frag = d.createDocumentFragment(), div = d.createElement('div');
            div.innerHTML = html;
            frag.appendChild(div);
            return $50.insertAfter(div.firstChild.cloneNode(true), elem);
            frag = null;
        },
insertFixed: function (html) { // 图标嵌入固定模式用 //
    $50.ready(function () {
        var script = $50.getKFscript(), elem = null;
                if (script.parentNode == head) elem = $50.before(html, d.body.firstChild);
                else elem = $50.after(html, script);
            });
        },
getTimeTo24: function () {
    //get senconds time from now to tomorrow 00:00
    var d1 = new Date(),
                d2 = new Date();
            d1.setDate(d1.getDate() + 1);
            d1.setHours(0);
            d1.setMinutes(0);
            d1.setSeconds(0);
            return (d1.getTime() - d2.getTime()) / 1000;
        },
json2str: function (json, code) {
    var arr = [];
    var encode = code == 'urlencode' ? $50.EN : function (data) {
        return data
            };
            for (var i in json) {
        if (json.hasOwnProperty(i)) {
            arr.push(i + '=' + encode(json[i]));
                }
    }
            return arr.join('&');
        },
addEvent: function (obj, type, fn) {
    if (obj.attachEvent) {
        obj['e' + type + fn] = fn;
                obj[type + fn] = function () {
            obj['e' + type + fn](window.event);
                }
                obj.attachEvent('on' + type, obj[type + fn]);
            } else {
        obj.addEventListener(type, fn, false);
    }
},
removeEvent: function (obj, type, fn) {
    if (obj.detachEvent) {
        obj.detachEvent('on' + type, obj[type + fn]);
                obj[type + fn] = null;
            } else {
        obj.removeEventListener(type, fn, false);
    }
}
});
//对外开放接口
$50.kfextend($50, {
    $: function (id) {
        return d.getElementById(id) ? d.getElementById(id) : null;
    },
        EN: EN,
        DE: DE,
        isStrict: isStrict,
        online: 'false',
        terminal: 'pc',
        openurl: '',
        workers: [],
        groups: [],
        groupIds: [],
        popParam: '',
        apiArr: [],
        uuid: '',
        host: '',
        sign: '',
        createApi: function () {
        var api = new _50API(this.online, this.terminal, this.openurl, this.workers, this.groups, this.groupIds);
        this.apiArr.push(api);
        return api;
    },
        setOnline: function (online) {
        this.online = online;
    },
        setUrl: function (url) {
        this.openurl = url;
    },
        setTerminal: function (terminal) {
        if (terminal == 'mobile') {
            this.terminal = 'mobile';
        }
    },
        setWorkers: function (workers) {
        this.workers = workers;
    },
        setGroups: function (groups) {
        this.groups = groups;
        for (var i = 0; i < groups.length; i++) {
            this.groupIds[i] = groups[i].group_id;
            }
        },
        getPopParam: function () {
        var re = this.popParam;
        this.popParam = '';
        return re;
    },
        setPopParam: function (param) {
        this.popParam = param;
    },
        callMsg: function () {
        for (var i = 0; i < this.apiArr.length; i++) {
            this.apiArr[i].callMsg();
            }
        },
        setUuid: function (uuid) {
        this.uuid = uuid;
    },
        getUuid: function () {
        return this.uuid;
    },
        setHost: function (host) {
        this.host = host;
    },
        setSign: function (sign) {
        this.sign = sign;
    },
        sendData: function (type, data) {
        var _this = this;
        var id = 'kf_script_' + _this.counter;
        var url = '//' + _this.host + '/kfapi.php?company_id=' + companyid + '&id=' + encodeURIComponent(_this.uuid) + '&type=' + encodeURIComponent(type) + '&data=' + encodeURIComponent(data) + '&sign=' + encodeURIComponent(_this.sign);
        _this.createScript(id, url);
        _this.counter++;
    },
        sendLword: function (type, msg, name, email, qq, phone, company, address, notes) {
        var _this = this;
        var id = 'kf_script_' + _this.counter;

        var talk_page_tmp = window.location.href;
        if (talk_page_tmp.indexOf('hz6d{') != -1) {
            talk_page_tmp = talk_page_tmp.substring(0, talk_page_tmp.indexOf('hz6d{'));
        }

        var sendData = "&msg=" + msg + "&ly_name=" + name + "&ly_email=" + email + "&ly_qq=" + qq + "&ly_phone=" + phone + "&ly_company=" + company + "&ly_addr=" + address + "&notes=" + notes + "&ly_first=true&ly_mode=3&ly_object=";

        var url = '//' + _this.host + '/lword_sdk.php?company_id=' + companyid + '&guest_id=' + hz6d_guest_id + '&referer1=' + encodeURIComponent(hz6d_from_page) + '&referer=' + encodeURIComponent(talk_page_tmp) + '&land_page=' + encodeURIComponent(hz6d_land_page) + sendData;
        _this.createScript(id, url);
        _this.counter++;
    },
        callPhone: function (call, id6d, phone) {
        var _this = this;
        var id = 'kf_script_' + _this.counter;

        var sendData = "&call=" + call + "&id6d=" + id6d + "&phone=" + phone;
        var url = '//' + _this.host + '/impl/rpc_callback_phone.php?from=api&company_id=' + companyid + '&guest_id=' + hz6d_guest_id + "&style=" + hz6d_style_id + sendData;

        _this.createScript(id, url);
        _this.counter++;
    },
        callBack: function (data) {
        console.log(data);
    },
        comeInfo: function (logo, title, content, curl) {
        var _this = this;
        var id = 'kf_script_' + _this.counter;

        var sendData = '&logo=' + encodeURIComponent(logo) + '&title=' + encodeURIComponent(title) + '&content=' + encodeURIComponent(content) + '&curl=' + encodeURIComponent(curl);
        var url = '//' + _this.host + '/comeinfo.php?company_id=' + companyid + '&id=' + encodeURIComponent(_this.uuid) + '&sign=' + encodeURIComponent(_this.sign) + sendData;

        _this.createScript(id, url);
        _this.counter++;
    }
    });
    function _50API(online, terminal, openurl, workers, groups, groupIds) {
        this.online = online,
            this.terminal = terminal,
            this.openurl = openurl,
            this.workers = workers,
            this.groups = groups,
            this.groupIds = groupIds,
            this.paramArr = ['cmd', 'type', 'group_id', 'worker_id', 'msg_callback', 'mtalk', 'stat_id', , 'member', 'id', 'name', 'lword', 'msg', 'email', 'qq', 'phone', 'company', 'address', 'notes', 'custom_info', 'stat', 'callphone', 'id6d', 'call', 'logo', 'title', 'content', 'curl'],
            this.param = {},
            this.callMsg = function () {
            },    //来消息回调函数
            this.setPopParam = function (param) {
                $50.setPopParam(param);
            },
            this.checkGroup = function (group_id) {
                var _this = this;
                var groupIds = group_id.split(',');
                for (var i = 0; i < groupIds.length; i++) {
                    if (_this.groupIds.indexOf(groupIds[i]) < 0) {
                        return false
                    }
                }
                return true;
            },
            this.push = function (key, value) {     //添加参数
                var _this = this;
                if (_this.paramArr.indexOf(key) < 0) {
                    return _this.reback('401', 'error param');
                }
                if (key == 'msg_callback') {
                    if ((typeof value) == 'function') {
                        _this.callMsg = value;
                    } else {
                        return _this.reback('402', 'msg_callback must be a function');
                    }
                } else {
                    value = $50.trim(value);
                    if (value == '') {
                        return _this.reback('403', 'error value');
                    }
                    if (key == 'group_id' && _this.checkGroup(value) === false) {
                        return _this.reback('404', 'unknown group_id');
                    }
                    _this.param[key] = value;
                }
                return _this.reback('201', 'success', false);
            },
            this.query = function () {    //执行命令
                var _this = this;
                switch (_this.param.cmd) {
                    case 'kfclient':
                        if (_this.param.type != 'new' && _this.param.type != 'popup') {
                            return _this.reback('501', 'error type');
                        }
                        var group_id = $50.trim(_this.param.group_id);
                        var worker_id = $50.trim(_this.param.worker_id);
                        if (group_id != '' && worker_id != '' && !(_this.terminal == 'mobile' && _this.param.type == 'popup')) {
                            return _this.reback('503', 'worker_id and group_id can only choose one ');
                        }
                        var zdkf_type = 1;
                        var kf = worker_id;
                        if (group_id != '') {
                            zdkf_type = 3;
                            kf = group_id;
                        }
                        _this.openkf(_this.param.type, zdkf_type, kf);
                        return _this.reback('201', 'success');
                        break;
                    case 'mtalk':
                        var group_id = $50.trim(_this.param.group_id);
                        var worker_id = $50.trim(_this.param.worker_id);
                        if (_this.terminal != 'mobile') {
                            return _this.reback('301', 'error terminal');
                        }
                        if (group_id != '' && worker_id != '') {
                            return _this.reback('303', 'worker_id and group_id can only choose one ');
                        }
                        var zdkf_type = 1;
                        var kf = worker_id;
                        if (group_id != '') {
                            zdkf_type = 3;
                            kf = group_id;
                        }
                        _this.talk(_this.param.type, zdkf_type, kf);
                        return _this.reback('201', 'success');
                        break;
                    case 'member':
                        var id = $50.trim(_this.param.id ? _this.param.id : "");
                        var name = $50.trim(_this.param.name ? _this.param.name : "");
                        var email = $50.trim(_this.param.email ? _this.param.email : "");
                        var qq = $50.trim(_this.param.qq ? _this.param.qq : "");
                        var phone = $50.trim(_this.param.phone ? _this.param.phone : "");
                        var company = $50.trim(_this.param.company ? _this.param.company : "");
                        var address = $50.trim(_this.param.address ? _this.param.address : "");
                        var notes = $50.trim(_this.param.notes ? _this.param.notes : "");
                        var custom_info = $50.trim(_this.param.custom_info ? _this.param.custom_info : "");
                        if (custom_info != "" && custom_info.length > 40)  return _this.reback('601', 'custom_info length cannot exceed 40');
                        var script_id = 'kf_script_guest';
                        var url = hz6d_alias_host + '/kfapi_guest.php?company_id=' + companyid + '&guest_id=' + hz6d_guest_id + '&u_cust_id=' + id + '&u_cust_name=' + name + '&email=' + email + '&qq=' + qq + '&phone=' + phone + '&company=' + company + '&address=' + address + '&notes=' + notes + '&custom_info=' + custom_info;
                        $50.createScript(script_id, url);
                        break;
                    case 'status':
                        return _this.reback('201', _this.online);
                        break;
                    case 'grouplist':
                        return _this.reback('201', _this.groups);
                        break;
                    case 'workerlist':
                        return _this.reback('201', _this.workers);
                        break;
                    case 'jzl':
                    case 'mxsj':
                    case 'xsgl':
                        var data = $50.trim(_this.param.stat_id);
                        _this.saveData(_this.param.cmd, data);
                        break;
                    case 'stat':
                        var type = $50.trim(_this.param.id);
                        var data = $50.trim(_this.param.stat_id);
                        _this.saveData(type, data);
                    case 'lword':
                        var msg = $50.trim(_this.param.msg);
                        if (msg == "") return _this.reback('601', 'msg is null');
                        var name = $50.trim(_this.param.name ? _this.param.name : "");
                        var email = $50.trim(_this.param.email ? _this.param.email : "");
                        var qq = $50.trim(_this.param.qq ? _this.param.qq : "");
                        var phone = $50.trim(_this.param.phone ? _this.param.phone : "");
                        var company = $50.trim(_this.param.company ? _this.param.company : "");
                        var address = $50.trim(_this.param.address ? _this.param.address : "");
                        var notes = $50.trim(_this.param.notes ? _this.param.notes : "");
                        _this.saveLword(_this.param.cmd, msg, name, email, qq, phone, company, address, notes);
                        break;
                    case 'callphone':
                        var id6d = $50.trim(_this.param.id6d ? _this.param.id6d : "");
                        var phone = $50.trim(_this.param.phone ? _this.param.phone : "");
                        var reg = /^([0-9]|-)*$/;
                        if (phone != "" && !reg.test(phone)) return _this.reback('601', 'error phone');
                        if (id6d == "" && phone == "") return _this.reback('601', 'phone and name cannot be empty at the same time');
                        var call = $50.trim(_this.param.call ? _this.param.call : "");
                        if (call == "" || !reg.test(call)) return _this.reback('601', 'error call');
                        _this.savePhone(call, id6d, phone);
                        break;
                    case 'comeinfo':
                        var title = $50.trim(_this.param.title);
                        var logo = $50.trim(_this.param.logo);
                        var content = $50.trim(_this.param.content);
                        var curl = $50.trim(_this.param.curl);
                        _this.saveCinfo(logo, title, content, curl);
                        break;
                    default:
                        return _this.reback('601', 'error cmd');
                        break;
                }
            },
            this.talk = function (type, zdkf_type, kf) {
                var _this = this;
                var param = kf != '' ? ('&zdkf_type=' + zdkf_type + '&kf=' + kf) : '';
                if (_this.terminal == 'mobile') {
                    _this.setPopParam(param);
                    change_kf_openurl();
                }
            },
            this.openkf = function (type, zdkf_type, kf) {
                var _this = this;
                var param = kf != '' ? ('&zdkf_type=' + zdkf_type + '&kf=' + kf) : '';
                if (type == 'new') {
                    var url = _this.openurl + param;
                    if (_this.terminal == 'pc') {
                        window.open(url, "_blank", "height=600,width=800,top=200,left=200,status=yes,toolbar=no,menubar=no,resizable=yes,scrollbars=no,location=no,titlebar=no");
                    } else {
                        location.href = url;
                    }
                } else {
                    if (_this.terminal == 'pc') {
                        _this.setPopParam(param);
                        hz6d_startReautoTimer2(3);
                    } else {
                        show_mobile_chat();
                    }
                }
            },
            this.saveData = function (type, data) {
                $50.sendData(type, data);
            },
            this.saveLword = function (type, msg, name, email, qq, phone, company, address, notes) {
                $50.sendLword(type, msg, name, email, qq, phone, company, address, notes);
            },
            this.savePhone = function (call, id6d, phone) {
                $50.callPhone(call, id6d, phone);
            },
            this.saveCinfo = function (logo, title, content, curl) {
                $50.comeInfo(logo, title, content, curl);
            },
            this.openUrl = function (url, resize) {    //内部调用接口 用来点击打开咨询页面
                window.open(url, "_blank", "height=470,width=702,top=200,left=200,status=yes,toolbar=no,menubar=no,resizable=" + resize + ",scrollbars=no,location=no,titlebar=no");
            },
            this.reback = function (code, info, clear) {   //返回信息
                var _this = this;
                var data = {};
                if (code == '201') {
                    data = {code: code, cmd: _this.param.cmd, info: info};
                } else {
                    data = {code: code, info: info};
                }
                if (clear !== false) {
                    _this.param = {};    //清空参数
                }
                return data;
            }
    }

    // window.open 方法重写
    // 支持ie/ff/chrome/safari/opera
    var _open = window.open;
    window.open = function (sURL, sName, sFeatures, bReplace) {
        if (sURL == undefined) {
            sURL = ''
        }
        if (sName == undefined) {
            sName = ""
        }
        if (sFeatures == undefined) {
            sFeatures = ""
        }
        if (bReplace == undefined) {
            bReplace = false
        }
        if (/webCompany.php|webClientMin.php/.test(sURL)) {
            sURL += '&timeStamp=' + new Date().getTime() + '&ucust_id=' + $50.EN($50.getCookie('ucust_id'));
        } else if ('' != '') {
            var _zdyurl = '';
            if (sURL.indexOf(_zdyurl) > -1) {
                sURL += '&timeStamp=' + new Date().getTime() + '&ucust_id=' + $50.EN($50.getCookie('ucust_id'));
            }
        }
        try {
            sURL = sURL.replace('&referer={hz6d_referer}', hz6d_referer);
        } catch (e) {
        }
        var win = _open(sURL, sName, sFeatures, bReplace);
        return win;
    }
    window.$50 = $50;
})(window);


/* ↓图标相关函数↓ */

function hz6d_html_replace(html) {
    if (html.indexOf('{hz6d_keyword}') == -1) {
        return html.replace(/%7Bhz6d_keyword%7D/gim, encodeURIComponent(hz6d_from_page_new) + "&tfrom=1");
    } else {
        return html.replace(/{hz6d_keyword}/gim, hz6d_from_page_new + "&tfrom=1");
    }
}

function hz6d_is_exist(html) {
    if (typeof(hz6d_showContent) == "function" && hz6d_showContent && typeof(hz6d_ID('hz6d_chatting_iframes')) != undefined) {
        hz6d_showContent();
    } else {
        var new_clic = html.replace(/#liyc#/g, "\'");
        eval(decodeURIComponent(new_clic));
    }
}
function hz6d_is_exists(html, kf) {
    if (typeof(hz6d_showContent) == "function" && hz6d_showContent && typeof(hz6d_ID('hz6d_chatting_iframes')) != undefined) {
        hz6d_showContent(kf);
    } else {
        eval(decodeURIComponent(html));
    }
}
// has defined <!DOCTYPE... >

function hasdoctype() {
    if (document.compatMode == "BackCompat") {
        ret = false;
    }
    else {
        ret = true;
    }
    return ret;
}

function detectBrowser() {
    var ret = "ie6"; // default
    var user_agent = navigator.userAgent;
    if (user_agent.indexOf("compatible") > -1) {
        if (user_agent.indexOf("MSIE 6.0") > -1) {
            ret = "ie6";
        }
        else if (user_agent.indexOf("MSIE 7.0") > -1) {
            ret = "ie7";
        }
        else if (user_agent.indexOf("MSIE 8.0") > -1) {
            ret = "ie8";
        }
        if (user_agent.indexOf("360") > -1) {
            ret = "360";
        }
    }
    else if (user_agent.indexOf("Gecko") > -1) {
        ret = "firefox";
    }
    if (user_agent.indexOf("TheWorld") > -1) {
        ret = "TheWorld";
    }
    return ret;
}

// 间距小于步进，则移动间距的距离
function smoothMove(start, end) {
    var step = Math.abs(end - start);
    var forword = end - start;
    if (step > 2) {
        step = Math.ceil(step * 0.2) * (forword / Math.abs(forword));
    }
    else {
        step = step * (forword / Math.abs(forword));
    }
    posi = start + step;
    if (step > 0) {
        if (posi > end) posi = end;
    }
    else {
        if (posi < end) posi = end;
    }
    return posi;
}

var hasdoctype = hasdoctype();
var browser = detectBrowser();
// 点击图标设置变量

function setIsinvited() {
    try {
        onliner_zdfq = 2;
        if (acc_autotype == 3) {
            document.cookie = "onliner_zdfq72175858=" + onliner_zdfq;
        }
    }
    catch (e) {
    }
}
/* ↑图标相关函数↑ */

// 设置 新老访客
function set50gidCookie(key, value, expire) {
    $50.setCookie(key, value, {
        "expires": expire
    });
    switch (key) {
        case '50gid2':
            // new visitor
            $50.setCookie('visitor_type', 'new');
            break;
        case '50gid0':
            $50.data('is_uv', 1);
            break;
        case '50gid1':
            $50.data('is_rv', 1);
            break;
    }
}

if (!$50.getCookie('50gid2')) {
    set50gidCookie('50gid2', hz6d_guest_id, 10 * 365 * 24 * 3600);
} else if ($50.getCookie('50gid2')) {
    var hz6d_50gid2 = $50.getCookie('50gid2');
    // old visitor
    if (hz6d_guest_id == hz6d_50gid2) {
        $50.setCookie('visitor_type', 'old');
        hz6d_guest_id = $50.getCookie('50gid2');
    } else {
        set50gidCookie('50gid2', hz6d_guest_id, 10 * 365 * 24 * 3600);
    }
}
// set my site uid -> crm
// set 50kf guest_id 设置UV
if (!$50.getCookie('50gid0')) {
    set50gidCookie('50gid0', hz6d_guest_id, $50.getTimeTo24());
} else if ($50.getCookie('50gid2')) {
    var hz6d_50gid0 = $50.getCookie('50gid0');
    if (hz6d_guest_id == hz6d_50gid0) {
        $50.data('is_uv', 0);
    } else {
        set50gidCookie('50gid0', hz6d_guest_id, $50.getTimeTo24());
    }
}
// 设置RV
if (!$50.getCookie('50gid1')) {
    set50gidCookie('50gid1', hz6d_guest_id, 86400);
} else if ($50.getCookie('50gid2')) {
    var hz6d_50gid1 = $50.getCookie('50gid1');
    if (hz6d_guest_id == hz6d_50gid1) {
        $50.data('is_rv', 0);
    } else {
        set50gidCookie('50gid1', hz6d_guest_id, 86400);
    }
}
var is_revisit = 0;
if (!$50.getCookie('50revisit')) {
    $50.setCookie('50revisit', new Date().getTime(), {
        expires: 10 * 365 * 24 * 3600, 'path': '/'
    });
} else {
    if ((new Date().getTime() - $50.getCookie('50revisit')) > 86400000) {
        is_revisit = 1;
    }
}

// 获取访问的入口来源页面:搜索引擎/外部链接/直接输入
var hz6d_from_page = $50.getCookie("50kf_" + companyid + "_keyword");
var hz6d_now_host = window.location.host;
function getHz6dReferer() {
    var referer = "";
    var hz6d_request = $50.getUrlParam();
    var hz6d_tglink = false;
    var search_engine_list = {'baidu': 'wd=',
        'haosou': 'q=',
        'sogou': 'query=',
        'google': 'q=',
        'youdao': 'q=',
        'sm': 'q='
    };
    if (hz6d_request['tgse'] && hz6d_request['tgkwd']) {
        hz6d_tglink = 'http://www.' + hz6d_request['tgse'] + '.com/s?' + search_engine_list[hz6d_request['tgse']] + decodeURIComponent(hz6d_request['tgkwd']);
    }
    if (hz6d_tglink) {//是否是推广页面
        referer = hz6d_tglink;
    } else {
        referer = document.referrer;
    }
    return referer;
}

if (hz6d_from_page == "") {
    hz6d_from_page = getHz6dReferer();
    if (hz6d_now_host != "") $50.setCookie("50kf_" + companyid + "_from_host", hz6d_now_host, {'path': '/'});
} else {
    var hz6d_from_page_referer = getHz6dReferer();
    var hz6d_from_page_host = $50.getUrlHost(hz6d_from_page_referer);
    if (hz6d_from_page_host != "" && hz6d_now_host != "" && hz6d_now_host != hz6d_from_page_host) {
        var hz6d_now_hosts_string = $50.getCookie("50kf_" + companyid + "_from_host");
        var hz6d_now_hosts = hz6d_now_hosts_string.split(",");
        if (hz6d_now_hosts.length > 0) {
            if (hz6d_now_hosts.indexOf(hz6d_from_page_host) == -1) {
                hz6d_from_page = hz6d_from_page_referer;
            }
            if (hz6d_now_hosts.indexOf(hz6d_now_host) == -1) {
                hz6d_now_hosts_string += "," + hz6d_now_host;
                $50.setCookie("50kf_" + companyid + "_from_host", hz6d_now_hosts_string, {'path': '/'});
            }
        } else {
            hz6d_from_page = hz6d_from_page_referer;
            $50.setCookie("50kf_" + companyid + "_from_host", hz6d_now_host, {'path': '/'});
        }
    }
}
$50.data('page_referer', hz6d_from_page);
$50.setCookie("50kf_" + companyid + "_keyword", hz6d_from_page, {'path': '/'});

hz6d_from_page_new = "&keyword=" + $50.EN(hz6d_from_page);
var acc_browser = $50.getBrowser();
var acc_os = $50.getOs();
var hz6d_land_page = $50.getCookie("50kf_" + companyid + "_land_page");
eval("var kf_" + companyid + "_land_page_ok=$50.getCookie('kf_" + companyid + "_land_page_ok');");

//公司站点
try {
    var in_site = false;
    var talk_page_now = window.location.href;
    if (talk_page_now.indexOf('hz6d{') != -1) {
        talk_page_now = talk_page_now.substring(0, talk_page_now.indexOf('hz6d{'));
    }
    var talk_page = window.encodeURIComponent(talk_page_now);
    if (!eval("kf_" + companyid + "_land_page_ok")) {
        hz6d_land_page = talk_page;
    }
    var is_null = true;
    if (talk_page_now.indexOf("50kf.com") == -1) {
        for (var p in company_site) {
            if (company_site.hasOwnProperty(p)) {
                is_null = false;
                if (talk_page_now.indexOf(company_site[p].replace(/\\//g, "/")) != -1) {
                in_site = true;
                break;
            }
        }
        }
    if (is_null) in_site = true;
} else {
    in_site = true;
}
} catch (e) {
    in_site = true;
}

$50.setCookie("50kf_" + companyid + "_land_page", hz6d_land_page, {'path': '/'});
$50.setCookie("kf_" + companyid + "_land_page_ok", 1, {'path': '/'});

var acc_first_time = new Date().getTime();

function hz6d_sendACC() {
    var kh_status = 0;
    if (onliner_zdfq == 3) {
        kh_status = 3;
    }
    // var talk_page_tmp = window.location.href;
    // if(talk_page_tmp.indexOf('hz6d{') != -1) {
    //     talk_page_tmp = talk_page_tmp.substring(0,talk_page_tmp.indexOf('hz6d{'));
    // }
    // var talk_page = window.encodeURIComponent(talk_page_tmp);
    // 	var kf_time = "1605343225641";
    var time = new Date().getTime();
    if (time - acc_first_time > 24 * 60 * 60 * 1000) return;
    var curSecond = Math.floor(time / 1000);
    var page_title = document.title;
    var url = http_pro + acc_host + "/sendacc.html?cmd=ACC&did=0&sid=12&company_id=" + companyid + "&guest_id=" + hz6d_guest_id + "&status=" + kh_status + "&guest_name=&guest_ip=" + $50.EN(hz6d_guest_ip) + "&guest_ip_info=" + ipstr + "&area=" + areastr + "&from_page=" + $50.EN($50.getCookie("50kf_" + companyid + "_keyword")) + "&talk_page=" + talk_page + "&kf_time=" + in_timestamp + "&bto_id6d=-99&time=" + time + '&ucust_id=' + $50.EN($50.getCookie('ucust_id')) + '&style=' + hz6d_style_id + '&is_mobile=' + $50.isMobile() + '&visitor_type=' + $50.getCookie('visitor_type') + '&is_uv=' + $50.data('is_uv') + '&browser=' + acc_browser + '&os=' + acc_os + '&is_revisit=' + is_revisit + "&page_title=" + $50.EN(page_title);
    if (companyid == 72150759) url += "&acc_first_time=" + acc_first_time;
    $50.createScript("hz6d_send_acc", url);
    //setTimeout("hz6d_sendACC()", 20000);
}
if (companyid != 72157223 && in_site)
    hz6d_sendACC();


(function (window, document, talkHost, ipStr, ipContinent, companyId, styleId, undefined) {
    /**
     *$50.data('workers')        工号信息
     *$50.data('groups')            分组信息
     *$50.data('page_referer')    访问来源
     *$50.data('mobile_icon')    手机图标设置
     *$50.data('mobile_invite')    手机邀请框设置
     *$50.data('assign_worker')    指定客服设置
     *$50.data('zdkf_type')        客服指定类型    1:指定工号 2:指定部门(已废弃) 3:指定分组
     *$50.data('kf')                具体指定客服
     *$50.data('is_online')        是否在线        0:离线 1:在线
     */

    /****************************************事件处理基类结束*************************************/

    /****************************************手机图标类开始*************************************/
    function _50_mobile_icon(icon_set) {
        var _this = this;
        _this.isOnline = $50.data('is_online') === '1' ? true : false;
        _this.iconElm = null;
        if (typeof  icon_set.on_is_open != "undefined") {//老数据兼容
            _this.on_is_open = icon_set.on_is_open;
            _this.on_left = icon_set.on_left;
            _this.on_top = icon_set.on_top;
            _this.on_content = icon_set.on_content;
            _this.off_is_open = icon_set.off_is_open;
            _this.off_left = icon_set.off_left;
            _this.off_top = icon_set.off_top;
            _this.off_content = icon_set.off_content;
        } else {
            _this.on_is_open = icon_set.is_open;
            _this.on_left = icon_set.left;
            _this.on_top = icon_set.top;
            _this.on_content = icon_set.on_content;
            _this.off_is_open = icon_set.is_open;
            _this.off_left = icon_set.left;
            _this.off_top = icon_set.top;
            _this.off_content = icon_set.off_content;
        }
        _this.lotto_top = icon_set.lotto_top ? icon_set.lotto_top : 45;
        _this.lotto_left = icon_set.lotto_left ? icon_set.lotto_left : 100;
        _this.icon_award = $50.data("icon_award");

        _this._50Api = $50.createApi();
        _this.init();
    }

    /****************************************手机图标类结束*************************************/

    /****************************************手机抽奖类结束*************************************/
    function Lotto() {
        this.icon = document.getElementById("lotto_icon");
        this.l = document.getElementById("lotto_redpacket");
        this.d = document.getElementById("lotto_decorate");
        this.r = document.getElementById("lotto_round");
        this.i = document.getElementById("lotto_inp");
        this.m = document.getElementById("lotto_message");
        this.w = document.getElementById("lotto_win");
        this.b = document.getElementById("lotto_btn");
        this.t = document.getElementById("lotto_btntext");
        this.s = document.getElementById("lotto_s");
        this.n = document.getElementById("lotto_name");
        this.p = document.getElementById("lotto_phonenum");
        this.u = document.getElementById("lotto_statu");
    };
    Lotto.prototype = {
        //设置抽奖位置
        positionIcon: function (left, top) {
            var _this = this;
            var wid = document.documentElement.clientWidth;
            var hei = document.documentElement.clientHeight;
            _this.icon.style.left = ( wid - parseInt(_this.icon.style.width)) * (left / 100) + 'px';
            _this.icon.style.top = (hei - parseInt(_this.icon.style.height)) * (top / 100) + 'px';
            _this.icon.style.display = "block";
        },
        // 抽奖红包出现
        lottoShow: function () {
            var _this = this;
            if (_this.l.style.display == "none") {
                _this.b.setAttribute('data-class', 0);
                _this.l.style.display = "block";
                _this.r.style.display = "block";
                _this.d.style.display = "none";
                _this.m.style.display = "none";
                _this.i.style.display = "none";
                _this.w.style.display = "none";
                _this.t.innerHTML = "立即抽奖";
                _this.s.style.display = "inline-block";
                clearInterval(_this.timout);
                _this.s.innerHTML = "(60s)";
                _this.timeGo();
            } else {
                return false;
            }
        },
        // 抽奖红包隐藏
        lottoHide: function () {
            clearInterval(this.timout);
            this.s.innerHTML = "(60s)";
            this.n.value = "";
            this.p.value = "";
            this.l.style.display = "none";
        },
        // 抽奖状态切换(待添加验证：该手机号码已领取奖励)
        lottoChange: function (award_id) {
            var _this = this;
            if (_this.b.getAttribute('data-class') == 0) {
                _this.b.setAttribute('data-class', 1);
                _this.r.style.display = "none";
                _this.d.style.display = "block";
                _this.m.style.display = "block";
                _this.i.style.display = "block";
                _this.t.innerHTML = "立即领取";
                _this.s.style.display = "inline-block";
                clearInterval(_this.timout);
                _this.s.innerHTML = "(60s)";
                _this.timeGo();
            } else if (_this.b.getAttribute('data-class') == 1) {
                var mobil = /^1[3-9]\d{9}$/;
                if (_this.p.value == "") {
                    _this.statuSh("请输入手机号码");
                    return false;
                } else if (!mobil.test(_this.p.value)) {
                    _this.statuSh("请输入有效的手机号码");
                } else {
                    var script_id = 'kf_script_award';
                    var name = _this.n.value;
                    var mobile = _this.p.value;
                    var callBackFunName = "award_callback_" + new Date().getTime();
                    eval(callBackFunName + '= function(data){_this.createResult(data)}');

                    var url = hz6d_alias_host + '/kfapi_award.php?company_id=' + companyid + '&guest_id=' + hz6d_guest_id + '&name=' + encodeURIComponent(name) + '&mobile=' + mobile + '&award_id=' + award_id + '&callback=' + callBackFunName;
                    $50.createScript(script_id, url);
                    _this.t.innerHTML = "抽奖中...";
                    _this.s.style.display = "none";
                    clearInterval(_this.timout);
                }
            } else {
                // console.log("点击建立对话");
                _this.iconTalk();
                _this.l.style.display = "none";
            }
        },
        createResult: function (data) {
            var _this = this;
            if (data.code == 200) {
                _this.b.setAttribute('data-class', 2);
                _this.r.style.display = "none";
                _this.m.style.display = "none";
                _this.i.style.display = "none";
                _this.w.style.display = "block";
                _this.t.innerHTML = "咨询在线客服";
                _this.s.style.display = "none";
                _this.icon.style.display = "none";
            } else {
                _this.statuSh(data.info);
            }
        },
        // 状态提醒
        statuSh: function (str) {
            var _this = this;
            _this.u.innerHTML = str;
            _this.u.style.display = "block";
            _this.u.style.marginLeft = (-_this.u.offsetWidth / 2) + "px";
            _this.u.style.left = "50%";
            var timer = setTimeout(function () {
                _this.u.style.display = "none";
                clearTimeout(timer);
            }, 1500)
        },
        // 禁止输入非数字
        justNum: function (obj) {
            obj.value = obj.value.replace(/[^\d]/g, '');
        },
        // 60s倒计时
        timeGo: function () {
            var _this = this;
            var count = 60;
            _this.timout = setInterval(function () {
                count--;
                _this.s.innerHTML = "(" + count + "s)";
                if (count == 0) {
                    clearInterval(_this.timout)
                    _this.l.style.display = "none";
                }
            }, 1000)
        },
        // 获取焦点
        onFocus: function () {
            if (document.getElementById("mobile_minchat_div")) {
                document.getElementById("mobile_minchat_div").style.display = "none";
            }
        },
        // 失去焦点
        onBlur: function () {
            if (document.getElementById("mobile_minchat_div")) {
                document.getElementById("mobile_minchat_div").style.display = "block";
            }
        },
        iconTalk: function () {
        }
    };
    /****************************************手机抽奖类结束*************************************/


    /****************************************手机邀请框类开始***********************************/
    function _50_mobile_ivt(ivt_set) {
        var _this = this;
        _this.isOnline = $50.data('is_online') === '1' ? true : false;
        _this.ivtElm = null;
        _this.is_open = ivt_set.is_open;
        _this.invite_off = ivt_set.invite_off;
        _this.invite_left = ivt_set.invite_left;
        _this.invite_top = ivt_set.invite_top;
        _this.invite_area = ivt_set.invite_area;
        _this.fanfu_time = ivt_set.fanfu_time;
        _this.invite_times = ivt_set.invite_times;
        _this.page_times = ivt_set.page_times;
        _this.timeout = ivt_set.timeout;
        _this.ivt_content = ivt_set.content;
        if (typeof ivt_set.invite_is_reauto != 'undefined') _this.invite_is_reauto = ivt_set.invite_is_reauto;
        else _this.invite_is_reauto = 2;
        _this.init();
    }

    /****************************************手机菜单栏类开始***********************************/
    function _50_mobile_chat(chat_set) {
        var _this = this;
        if ($50.data("is_update") == false) return;
        _this.isOnline = $50.data('is_online') === '1' ? true : false;
        _this.params = "";
        _this.kf_openurl = "";
        _this.window_scroll_top = 0;
        _this.items = [];
        _this.item = 0;
        _this.audio = null;

        _this.chatElm = null;
        _this.is_open = chat_set.is_open;
        _this.chat_type = chat_set.chat_type;
        _this.chat_window = chat_set.chat_window;
        _this.chat_pop_time = chat_set.chat_pop_time;
        _this.chat_is_reauto = chat_set.chat_is_reauto;
        _this.chat_reauto_time = chat_set.chat_reauto_time;
        _this.chat_pop_num = chat_set.chat_pop_num;
        _this.chat_bottom = chat_set.chat_bottom;
        _this.chat_air = chat_set.chat_air;
        _this.chat_content_color = chat_set.chat_content_color;
        _this.chat_air_bg_color = chat_set.chat_air_bg_color;
        _this.chat_num_show = chat_set.chat_num_show;
        _this.open_sdk = chat_set.open_sdk;
        _this.chat_off = chat_set.chat_off;
        _this.chat_content = chat_set.content;
        _this.mobile_chat_data = eval('(' + chat_set.mobile_chat_data + ')');
        _this.mobile_config = $50.data("mobileCompanyInfo");
        _this.init();
    }

    /****************************************PC图标类开始***************************************/
    /**
     *目前只定义了接口，等新版PC图标上线后再实现具体功能
     */
    // function _50_pc_icon(icon_set){}
    // _50_pc_icon.prototype = new handler();	//继承事件处理基类
    /****************************************PC图标类结束***************************************/

    /****************************************PC邀请框类开始*************************************/
    /**
     *目前只定义了接口，等新版PC邀请框上线后再实现具体功能
     */
    // function _50_pc_ivt(ivt_set){}
    // _50_pc_ivt.prototype = new handler();	//继承事件处理基类
    /****************************************PC邀请框类结束*************************************/

    /****************************************应用主类开始*************************************/
    function _50App() {
        var _this = this;
        _this.ipStr = decodeURI(ipStr);
        _this.ipContinent = decodeURI(ipStr);
        _this.apps = [];

        _this.kfOnline = 0;			//是否有工号在线
        _this.kfOfOnline = 0;		//是否有溢出工号在线
        _this.workers = $50.data('workers');
        _this.ofAllWorkers = $50.data('of_all_worker');
        _this.groups = $50.data('groups');
        _this.ofGroups = $50.data('of_groups');
        _this.workerStates = [];	//工号为key 在线状态为value
        _this.ofWorkerStates = [];	//工号为key 在线状态为value(未排除排班客服，溢出使用)
        _this.init();
    }

    _50App.prototype.init = function () {
        var _this = this;
        var assign_worker = $50.data('assign_worker');
        $50.data('zdkf_type', assign_worker.assignType == 'group' ? '3' : '1');
        $50.data('kflist', assign_worker.assignMode == 'hand' ? 'on' : 'off');
        $50.data('kf', assign_worker.workers == null ? '' : assign_worker.workers);

        // _this.initWorkerStates();
        // _this.checkAreaShunt();
        // _this.checkOnline();

        if (_this.isMobile() && in_site) {
            _this.initGroup();
            _this.initWorkerStates();
            _this.initOfWorkerStates();
            _this.checkOnline();
            try {
                if ($50.data('mobile_icon') != null && $50.data('mobile_invite') != null && $50.data('mobile_chat') != null) {
                    _this.setApp('icon', new _50_mobile_icon($50.data('mobile_icon')));
                    var mobile_invite = _this.initInviteDate($50.data('mobile_invite'), $50.data('mobile_chat'));
                    _this.setApp('invite', new _50_mobile_ivt(mobile_invite));
                    _this.setApp('chat', new _50_mobile_chat($50.data('mobile_chat')));
                    _this.clearCache();
                } else {
                    setTimeout(function () {
                        _this.setApp('icon', new _50_mobile_icon($50.data('mobile_icon')));
                        var mobile_invite = _this.initInviteDate($50.data('mobile_invite'), $50.data('mobile_chat'));
                        _this.setApp('invite', new _50_mobile_ivt(mobile_invite));
                        _this.setApp('chat', new _50_mobile_chat($50.data('mobile_chat')));
                        _this.clearCache();
                    }, 1000);
                }
            } catch (e) {
                console.log(e)
            }
        } else {
            _this.clearCache();
        }
    },
        _50App.prototype.initInviteDate = function (mobile_invite, mobile_chat) {
            if (mobile_invite.is_open == undefined) {
                mobile_invite.is_open = mobile_chat.chat_type == 1 ? 'yes' : 'no';
                mobile_invite.timeout = mobile_chat.invite_pop_time;
                mobile_invite.invite_times = mobile_chat.invite_pop_num;
                mobile_invite.fanfu_time = mobile_chat.invite_reauto_time;
                mobile_invite.invite_off = mobile_chat.invite_off == 1 ? 'yes' : 'no';
                mobile_invite.page_times = 9999;//保留浏览器弹出次数字段，兼容老版
                mobile_invite.invite_is_reauto = mobile_chat.invite_is_reauto;
            }
            return mobile_invite;
        }
    _50App.prototype.initGroup = function () {
        var _this = this;
        var workers = _this.copyObject($50.data('workers'));
        var id6d = 0;
        for (var group_id in _this.groups) {
            for (var i in _this.groups[group_id].workers) {
                id6d = _this.groups[group_id].workers[i];
                if (workers[id6d] !== undefined) {
                    delete workers[id6d];
                }
            }
        }
        if (_this.isEmptyObject(workers) === false) {
            _this.groups['0'] = {
                "group_name": "未分组",
                "workers": []
            }
            for (var id6d in workers) {	//未分组写入
                _this.groups['0'].workers.push(id6d);
            }
        }
    }
    _50App.prototype.overFlow = function () {//溢出
        var _this = this
        var over_flow = $50.data("over_flow");
        if ($50.data('is_online') == 1 || typeof over_flow["overflow_type"] == "undefined") return;
        switch (over_flow["overflow_type"]) {
        case "1":
                var addLinkParams = $50.data("add_link_params");
                if (addLinkParams == null) $50.data("add_link_params", "&lnk_overflow=1");
                else $50.data("add_link_params", addLinkParams + "&lnk_overflow=1");
                $50.data('zdkf_type', '1');
                $50.data('kflist', 'off');
                var kf = over_flow["overflow_value"];
                $50.data('kf', kf);
                if (kf == "") {
                    $50.data('is_online', _this.kfOfOnline);
                    return;
                }
                kf = kf.split(',');
                for (var i in kf) {
                if (_this.isOfWorkerOnline(kf[i], 'worker_id')) {
                    $50.data('is_online', '1');
                        return;
                    }
                }
                $50.data('is_online', '0');
                break;
            case "2":
                $50.data('zdkf_type', '1');
                $50.data('kflist', 'off');
                var scheduleIds = over_flow["overflow_value"];
                var ofSchedule = $50.data("over_flow_schedule");
                var kf = "";
                for (var i in ofSchedule) {
                if (typeof _this.workers[i] != "undefined") {
                    var workInfo = _this.workers[i];
                        kf += workInfo["worker_id"] + ",";
                    }
                }
                $50.data('kf', kf);
                if (scheduleIds == "" && kf == "") {
                    $50.data('is_online', '0');
                    return;
                }
                for (var i in ofSchedule) {
                if (_this.isOfWorkerOnline(i)) {
                    $50.data('is_online', '1');
                        return;
                    }
            }
                $50.data('is_online', '0');
                break;
            case "3":
                var addLinkParams = $50.data("add_link_params");
                if (addLinkParams == null) $50.data("add_link_params", "&lnk_overflow=1");
                else $50.data("add_link_params", addLinkParams + "&lnk_overflow=1");
                $50.data('zdkf_type', '3');
                $50.data('kflist', 'off');
                var kf = over_flow["overflow_value"];
                $50.data('kf', kf);
                if (kf == "") {
                    $50.data('is_online', _this.kfOfOnline);
                    return;
                }
                kf = kf.split(',');
                for (var i in kf) {
                if (_this.isOfGroupOnline(kf[i])) {
                    $50.data('is_online', '1');
                        return;
                    }
                }
                $50.data('is_online', '0');
                break;
        }
    }
    _50App.prototype.checkAreaShunt = function () {
        var _this = this;
        var areaShunt = $50.data('area_shunt');
        var areaKf = [];
        var kfOnline = 0;
        var areaGroup = [];
        var groupOnline = 0;
        var areaSchedule = [];
        var scheduleOnline = 0;
        var areas = ["安徽", "北京", "重庆", "福建", "甘肃", "广东", "广西", "贵州", "海南", "河北", "黑龙江", "河南", "湖北", "湖南", "江苏", "江西", "吉林", "辽宁", "宁夏", "内蒙古", "青海", "上海", "山西", "山东", "四川", "陕西", "天津", "西藏", "新疆", "云南", "浙江", "台湾", "香港", "澳门"];
        // var continents_arr = ["亚洲","欧洲","非洲","南美洲","北美洲","大洋洲","南极洲"];
        var ipAddr = "国外";
        for (var i in areas) {
            if (_this.ipStr.indexOf(areas[i]) >= 0) {
                ipAddr = _this.ipStr;
                break;
            }
        }
        for (var i in areaShunt) {
            if (areaShunt[i]['kf_type'] == '1' && (ipAddr.indexOf(areaShunt[i]['area']) >= 0 || _this.ipContinent.indexOf(areaShunt[i]['area']) >= 0)) {
                areaKf.push(areaShunt[i]['kf'])
                if (kfOnline == 0 && _this.isWorkerOnline(areaShunt[i]['kf'], 'worker_id')) {
                    kfOnline = 1;
                }
            }
            if (areaShunt[i]['kf_type'] == '2' && (ipAddr.indexOf(areaShunt[i]['area']) >= 0 || _this.ipContinent.indexOf(areaShunt[i]['area']) >= 0)) {
                areaGroup.push(areaShunt[i]['kf'])
                if (groupOnline == 0 && _this.isGroupOnline(areaShunt[i]['kf'])) {
                    groupOnline = 1;
                }
            }
            if (areaShunt[i]['kf_type'] == '4') {
                areaSchedule.push(areaShunt[i]['kf'])
                if (scheduleOnline == 0 && _this.isGroupOnline(areaShunt[i]['kf'])) {
                    scheduleOnline = 1;
                }
            }
        }
        if (kfOnline === 1) {
            $50.data('zdkf_type', '1');
            $50.data('kf', areaKf.join(','));
            $50.data('is_online', '1');
            return;
        }
        if (groupOnline === 1) {
            $50.data('zdkf_type', '3');
            $50.data('kf', areaGroup.join(','));
            $50.data('is_online', '1');
            return;
        }
        if (scheduleOnline === 1) {
            $50.data('zdkf_type', '3');
            $50.data('kf', areaSchedule.join(','));
            $50.data('is_online', '1');
            return;
        }
        if (areaKf.length > 0) {
            $50.data('zdkf_type', '1');
            $50.data('kf', areaKf.join(','));
            $50.data('is_online', '0');
            return;
        }
        if (areaGroup.length > 0) {
            $50.data('zdkf_type', '3');
            $50.data('kf', areaGroup.join(','));
            $50.data('is_online', '0');
            return;
        }
        if (areaSchedule.length > 0) {
            $50.data('zdkf_type', '3');
            $50.data('kf', areaSchedule.join(','));
            $50.data('is_online', '0');
            return;
        }
    }
    _50App.prototype.checkNewAreaShunt = function () {//区域分流
        var _this = this;
        var areaShunt = $50.data('area_shunt');
        var areaKf = [];
        var kfOnline = 0;
        var areaGroup = [];
        var groupOnline = 0;
        var areaSchedule = [];
        var scheduleOnline = 0;
        var areas = ["安徽", "北京", "重庆", "福建", "甘肃", "广东", "广西", "贵州", "海南", "河北", "黑龙江", "河南", "湖北", "湖南", "江苏", "江西", "吉林", "辽宁", "宁夏", "内蒙古", "青海", "上海", "山西", "山东", "四川", "陕西", "天津", "西藏", "新疆", "云南", "浙江", "台湾", "香港", "澳门"];
        // var continents_arr = ["亚洲","欧洲","非洲","南美洲","北美洲","大洋洲","南极洲"];
        var ipAddr = "国外";
        for (var i in areas) {
            if (_this.ipStr.indexOf(areas[i]) >= 0) {
                ipAddr = _this.ipStr;
                break;
            }
        }
        for (var i in areaShunt) {
            if (areaShunt[i]['kf_type'] == '1' && (ipAddr.indexOf(areaShunt[i]['area']) >= 0 || _this.ipContinent.indexOf(areaShunt[i]['area']) >= 0)) {
                areaKf.push(areaShunt[i]['kf'])
                if (kfOnline == 0 && _this.isWorkerOnline(areaShunt[i]['kf'], 'worker_id')) {
                    kfOnline = 1;
                }
            }
            if (areaShunt[i]['kf_type'] == '2' && (ipAddr.indexOf(areaShunt[i]['area']) >= 0 || _this.ipContinent.indexOf(areaShunt[i]['area']) >= 0)) {
                areaGroup.push(areaShunt[i]['kf'])
                if (groupOnline == 0 && _this.isGroupOnline(areaShunt[i]['kf'])) {
                    groupOnline = 1;
                }
            }
        }
        if (kfOnline === 1 || groupOnline === 1) {
            for (var i in areaGroup) {
                areaKf = _this.getGroupsWorkerid(areaGroup[i], areaKf);
            }
            $50.data('zdkf_type', '1');
            $50.data('kf', areaKf.join(','));
            $50.data('is_online', '1');
            return;
        }
        if (areaKf.length > 0 || areaGroup.length > 0) {
            for (var i in areaGroup) {
                areaKf = _this.getGroupsWorkerid(areaGroup[i], areaKf);
            }
            $50.data('zdkf_type', '1');
            $50.data('kf', areaKf.join(','));
            $50.data('is_online', '0');
            _this.overFlow();
            return;
        }
        var over_flow = $50.data("over_flow");
        if (typeof over_flow["overflow_type"] == "undefined") {
            $50.data('zdkf_type', '1');
            $50.data('kf', "");
            $50.data('is_online', '0');
            var addLinkParams = $50.data("add_link_params");
            if (addLinkParams == null) $50.data("add_link_params", "&lnk_overflow=2");
            else $50.data("add_link_params", addLinkParams + "&lnk_overflow=2");
        }
        _this.overFlow();
    }
    _50App.prototype.checkSourceShunt = function () {//来源分流
        var _this = this;
        var form_page = hz6d_from_page;
        var shunt_source = $50.data("source_shunt");
        var sourceKf = [];
        var isOnline = 0;
        var domain_host = _this.getDomain(form_page);
        var search = _this.getSearch(domain_host);
        if (search != "") {
            for (var i in shunt_source) {
                if (typeof shunt_source[i]["shunt"] != "undefined" && shunt_source[i]["shunt"] != null) {
                    var shunt = shunt_source[i].shunt.split(",");

                    for (var j in shunt) {
                        if (shunt[j] == "") continue;
                        if (search.indexOf(shunt[j]) != -1) {
                            if (shunt_source[i]["kf_type"] == 1) {
                                if (isOnline == 0 && _this.isWorkerOnline(shunt_source[i]['kf'])) isOnline = 1;
                                var id6d = shunt_source[i]["kf"];
                                var workInfo = _this.workers[id6d];
                                var kf = workInfo["worker_id"];
                                if (sourceKf.indexOf(kf) == -1) sourceKf.push(kf);
                            }

                            if (shunt_source[i]["kf_type"] == 2) {
                                if (isOnline == 0 && _this.isGroupOnline(shunt_source[i]['kf'])) isOnline = 1;
                                sourceKf = _this.getGroupsWorkerid(shunt_source[i]["kf"], sourceKf);
                            }
                        }
                    }
                }
            }

        }
        $50.data('zdkf_type', '1');
        $50.data('kf', sourceKf.join(','));
        var over_flow = $50.data("over_flow");
        if (sourceKf.join(',') == "" && typeof over_flow["overflow_type"] == "undefined") {
            var addLinkParams = $50.data("add_link_params");
            if (addLinkParams == null) $50.data("add_link_params", "&lnk_overflow=2");
            else $50.data("add_link_params", addLinkParams + "&lnk_overflow=2");
        }
        if (isOnline == 1) {
            $50.data('is_online', '1');
            return;
        } else {
            $50.data('is_online', '0');
            _this.overFlow();
            return;
        }
    }
    _50App.prototype.checkChannelShunt = function () {//渠道分流
        var _this = this;
        var shunt_channel = $50.data("channel_shunt");
        var land_page = decodeURIComponent(hz6d_land_page);
        var channelKf = [];
        var isOnline = 0;

        for (var i in shunt_channel) {
            if (typeof shunt_channel[i]["shunt"] != "undefined" && shunt_channel[i]["shunt"] != null) {
                var shunt = shunt_channel[i].shunt.split(",");

                for (var j in shunt) {
                    if (shunt[j] == "") continue;
                    if (land_page.indexOf(shunt[j]) != -1) {
                        if (shunt_channel[i]["kf_type"] == 1) {
                            if (isOnline == 0 && _this.isWorkerOnline(shunt_channel[i]['kf'])) isOnline = 1;
                            var id6d = shunt_channel[i]["kf"];
                            var workInfo = _this.workers[id6d];
                            var kf = workInfo["worker_id"];
                            if (channelKf.indexOf(kf) == -1) channelKf.push(kf);
                        }

                        if (shunt_channel[i]["kf_type"] == 2) {
                            if (isOnline == 0 && _this.isGroupOnline(shunt_channel[i]['kf'])) isOnline = 1;
                            channelKf = _this.getGroupsWorkerid(shunt_channel[i]["kf"], channelKf);
                        }
                    }
                }
            }
        }

        $50.data('zdkf_type', '1');
        $50.data('kf', channelKf.join(','));
        var over_flow = $50.data("over_flow");
        if (channelKf.join(',') == "" && typeof over_flow["overflow_type"] == "undefined") {
            var addLinkParams = $50.data("add_link_params");
            if (addLinkParams == null) $50.data("add_link_params", "&lnk_overflow=2");
            else $50.data("add_link_params", addLinkParams + "&lnk_overflow=2");
        }
        if (isOnline == 1) {
            $50.data('is_online', '1');
            return;
        } else {
            $50.data('is_online', '0');
            _this.overFlow();
            return;
        }
    }
    _50App.prototype.checkKf = function () {//正常客服接待
        var _this = this;
        if ($50.data('is_online') !== null) {		//区域分流已验证是否在线
            return;
        }
        var zdkf_type = $50.data('zdkf_type');
        var kf = $50.data('kf');
        if (kf == '') {
            $50.data('is_online', _this.kfOnline);
            return;
        }
        if (zdkf_type == '1') {
            kf = kf.split(',');
            for (var i in kf) {
                if (_this.isWorkerOnline(kf[i], 'worker_id')) {
                    $50.data('is_online', '1');
                    return;
                }
            }
            $50.data('is_online', '0');
        } else {
            kf = kf.split(',');
            for (var i in kf) {
                if (_this.isGroupOnline(kf[i])) {
                    $50.data('is_online', '1');
                    return;
                }
            }
            $50.data('is_online', '0');
        }
        _this.overFlow();
    }
    _50App.prototype.checkOnline = function () {
        var _this = this;
        // _this.checkKf();
        var shunt_info = $50.data("shunt_info");
        if (typeof shunt_info["shunt_type"] == "undefined") {
            shunt_info["shunt_type"] = "5";
        }

        switch (shunt_info["shunt_type"]) {
        case "1":
                _this.checkKf();
                break;
            case "2":
                $50.data("area_shunt", shunt_info["shunt_area"]);
                _this.checkNewAreaShunt();
                break;
            case "3":
                $50.data("source_shunt", shunt_info["shunt_source"]);
                _this.checkSourceShunt();
                break;
            case "4":
                $50.data("channel_shunt", shunt_info["shunt_channel"])
                _this.checkChannelShunt();
                break;
            default:
                _this.checkAreaShunt();
                _this.checkKf();
                break;
        }
    }
    //根据id6d或工号查询是否在线 默认以id6d查询
    _50App.prototype.isWorkerOnline = function (worker, type) {
        var _this = this;
        if (type == 'worker_id') {
            return _this.workerStates[worker] == '1' ? true : false;
        } else {
            return _this.workers[worker]['state'] == '1' ? true : false;
        }
    }
    //查询分组是否在线
    _50App.prototype.isGroupOnline = function (groupId) {
        var _this = this;
        var group = _this.groups[groupId];
        if (group == null) {
            return false
        }
        if (typeof(group['state']) !== 'undefined') {
            return group['state'] == '1' ? true : false;
        }
        var workers = group['workers'];
        for (var i in workers) {
            if (_this.isWorkerOnline(workers[i])) {
                _this.groups[groupId]['state'] = '1';
                return true;
            }
        }
        _this.groups[groupId]['state'] = '0';
        return false;
    }
    //根据id6d或工号查询是否在线 默认以id6d查询,不去除不在排班时间的客服(溢出人员判断)
    _50App.prototype.isOfWorkerOnline = function (worker, type) {
        var _this = this;
        if (type == 'worker_id') {
            return _this.ofWorkerStates[worker] == '1' ? true : false;
        } else {
            return _this.ofAllWorkers[worker]['state'] == '1' ? true : false;
        }
    }
    //查询分组是否在线,不去除不在排班时间的客服(溢出分组判断)
    _50App.prototype.isOfGroupOnline = function (groupId) {
        var _this = this;
        var group = _this.ofGroups[groupId];
        if (group == null) {
            return false
        }
        if (typeof(group['state']) !== 'undefined') {
            return group['state'] == '1' ? true : false;
        }
        var workers = group['workers'];
        for (var i in workers) {
            if (_this.isOfWorkerOnline(workers[i])) {
                _this.ofGroups[groupId]['state'] = '1';
                return true;
            }
        }
        _this.ofGroups[groupId]['state'] = '0';
        return false;
    }
    //获取分组下所有客服的工号
    _50App.prototype.getGroupsWorkerid = function (groupId, workerids) {
        var _this = this;

        if (typeof workerids == "undefined") var workerids = [];

        if (typeof _this.groups[groupId] == "undefined" || _this.groups[groupId] == null) {
            return workerids;
        }

        var id6ds = _this.groups[groupId]["workers"];
        for (var i = id6ds.length - 1; i >= 0; i--) {
            var workInfo = _this.workers[id6ds[i]];
            if (workerids.indexOf(workInfo['worker_id']) == -1) workerids.push(workInfo['worker_id']);
        }

        return workerids;
    }
    _50App.prototype.initWorkerStates = function () {
        var _this = this;
        var is_online = 0;
        for (var id6d in _this.workers) {
            is_online = _this.workers[id6d]['state'];
            _this.workerStates[_this.workers[id6d]['worker_id']] = is_online;
            if (is_online == '1') _this.kfOnline = '1';
        }
    }
    _50App.prototype.initOfWorkerStates = function () {
        var _this = this;
        var workers = _this.ofAllWorkers;
        var is_online = 0;
        for (var id6d in workers) {
            is_online = workers[id6d]['state'];
            _this.ofWorkerStates[workers[id6d]['worker_id']] = is_online;
            if (is_online == '1') _this.kfOfOnline = '1';
        }
    }
    // 获取搜索引擎
    _50App.prototype.getSearch = function (url) {
        //var realSearch = new Array('神马','手机神马','手机百度','手机搜狗','手机搜狗','手机新浪网','手机雅虎','手机有道','手机搜搜','手机360搜索','手机360搜索',"Google", "Google", "Google网盟", "百度网盟", "百度知道", "Baidu", "Baidu", "3721", "3721", "Yisou", "Sogou", "Sina", "Sina", "Yahoo", "Tom", "Tom", "Youdao", "SOSO", "Bing",'360','360','360','360');
        var realSearch = new Array('shenma', 'shenma', 'baidu', 'sogou', 'sogou', 'sina', 'yahoo', 'youdao', 'soso', '360', '360', "google", "google", "google", "baidu", "baidu", "baidu", "baidu", "3721", "3721", "Yisou", "sogou", "sina", "sina", "yahoo", "Tom", "Tom", "youdao", "soso", "bing", '360', '360', '360', '360');
        var search = new Array('sm.cn', 'm.sm.cn', 'm.baidu.com', 'm.sogou.com', 'wap.sogou.com', '3g.sina.com.cn', 'm.yahoo.com', 'm.youdao.com', 'm.soso.com', 'm.so.com', 'm.haosou.com', "google.com", "google.cn", "googleads.g.doubleclick.net", "cpro.baidu.com", "zhidao.baidu.com", "baidu.com", "baidu.com", "3721.com", "3721.com", "yisou.com", "sogou.com", "iask.com", "sina.com", "yahoo.com", "search.tom.com", "search.tom.com", "youdao.com", "soso.com", "cn.bing.com", '360.cn', 'so.com', 'sou.com', 'haosou.com');

        var len = search.length;
        for (var i = 0; i < len; i++) {
            if (url.indexOf(search[i]) != -1) {
                return realSearch[i];
            }
        }
        return "";
    }

    // 获取域名
    _50App.prototype.getDomain = function (url) {
        var pos = url.indexOf("http://");
        if (pos == 0) {
            var pos1 = url.indexOf("/", 7);
            if (pos1 == -1) {
                return url.substr(7);
            } else {
                var len = pos1 - pos - 7;
                return url.substr(7, len);
            }
        } else {
            var posHttps = url.indexOf("https://");
            if (0 == posHttps) {
                var pos1 = url.indexOf("/", 8);
                if (pos1 == -1) {
                    return url.substr(8);
                } else {
                    var len = pos1 - 8;
                    return url.substr(8, len);
                }
            } else {
                pos = url.indexOf("www.");
                if (pos == 0) {
                    var pos1 = url.indexOf("/");
                    if (pos1 == -1) {
                        return url.substr(0);
                    } else {
                        return url.substr(0, pos1);
                    }
                }
            }
        }

        pos = url.indexOf("/");
        if (pos == -1) {
            return url;
        } else {
            return url.substr(0, pos);
        }
    }
    _50App.prototype.clearCache = function () {
        var _this = this;
        _this.workers = null;
        _this.groups = null;
        _this.workerStates = null;
        $50.data('mobile_icon', null);
        $50.data('mobile_invite', null);
        $50.data('assign_worker', null);
    }
    _50App.prototype.isMobile = function () {
        var regex_match = /(nokia|iphone|android|motorola|^mot\-|softbank|foma|docomo|kddi|up\.browser|up\.link|htc|dopod|blazer|netfront|helio|hosin|huawei|novarra|CoolPad|webos|techfaith|palmsource|blackberry|alcatel|amoi|ktouch|nexian|samsung|^sam\-|s[cg]h|^lge|ericsson|philips|sagem|wellcom|bunjalloo|maui|symbian|smartphone|midp|wap|phone|windows ce|iemobile|^spice|^bird|^zte\-|longcos|pantech|gionee|^sie\-|portalmmm|jig\s browser|hiptop|^ucweb|^benq|haier|^lct|opera\s*mobi|opera\*mini|320x320|240x320|176x220|ipad|XiaoMi)/i;
        if (navigator.userAgent.match(regex_match)) {
            return true;
        }
        return false;
    }
    _50App.prototype.getApp = function (name) {
        var _this = this;
        return _this.apps[name];
    }
    _50App.prototype.setApp = function (name, app) {
        var _this = this;
        _this.apps[name] = app;
    }
    _50App.prototype.copyObject = function (e) {
        var _this = this;
        if (typeof(e) != 'object') return e;
        if (e == null) return e;
        var myNewObj = new Object();
        for (var i in e)
            myNewObj[i] = _this.copyObject(e[i]);
        return myNewObj;
    }
    _50App.prototype.isEmptyObject = function (e) {
        var t;
        for (t in e)
            return !1;
        return !0
    }


    _50App.prototype.show = function (type) {
        var _this = this;
        _this.getApp(type).show();
    }
    _50App.prototype.hide = function (type) {
        var _this = this;
        _this.getApp(type).hide();
    }
    _50App.prototype.talk = function (type, params) {
        var _this = this;
        _this.getApp(type).talk(params);
    }
    _50App.prototype.setMsgTip = function (type, obj) {
        var _this = this;
        _this.getApp(type).setMsgTip(obj);
    }
    _50App.prototype.getAppObj = function (type, obj) {
        var _this = this;
        return _this.getApp(type).getAppObj(obj);
    }
    /****************************************应用主类结束*************************************/
    function create50APP() {
        if ($50.data('mobile_icon') == null || $50.data('mobile_invite') == null || $50.data('assign_worker') == null) {
            setTimeout(function () {
                create50APP();
            }, 200);
            return;
        }
        window._50App = new _50App();
    }

    create50APP();
})(window, document, hz6d_alias_host, ipstr, ipContinent, companyid, hz6d_style_id);

        